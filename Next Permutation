class Solution {
public:
    void nextPermutation(vector<int>& nums) {
       int n = nums.size(); 
    int index = -1; 
    
    // Find the largest index i such that nums[i] < nums[i+1]
    for (int i = n - 2; i >= 0; --i) {
        if (nums[i] < nums[i + 1]) {
            index = i; 
            break; 
        }
    }
    
    // If no such index is found, reverse nums to get the smallest permutation
    if (index == -1) {
        reverse(nums.begin(), nums.end()); 
        return;
    }
    
    // Find the largest index j such that nums[j] > nums[index]
    for (int j = n - 1; j > index; --j) {
        if (nums[j] > nums[index]) {
            swap(nums[j], nums[index]); 
            break; 
        }
    }
    
    // Reverse the sequence after index to get the next permutation
    reverse(nums.begin() + index + 1, nums.end()); 
    }
};
